// Code generated by MockGen. DO NOT EDIT.
// Source: gophermart/internal/app/handlers (interfaces: OrderNumberValidator)

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrderNumberValidator is a mock of OrderNumberValidator interface.
type MockOrderNumberValidator struct {
	ctrl     *gomock.Controller
	recorder *MockOrderNumberValidatorMockRecorder
}

// MockOrderNumberValidatorMockRecorder is the mock recorder for MockOrderNumberValidator.
type MockOrderNumberValidatorMockRecorder struct {
	mock *MockOrderNumberValidator
}

// NewMockOrderNumberValidator creates a new mock instance.
func NewMockOrderNumberValidator(ctrl *gomock.Controller) *MockOrderNumberValidator {
	mock := &MockOrderNumberValidator{ctrl: ctrl}
	mock.recorder = &MockOrderNumberValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderNumberValidator) EXPECT() *MockOrderNumberValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockOrderNumberValidator) Validate(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockOrderNumberValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockOrderNumberValidator)(nil).Validate), arg0)
}

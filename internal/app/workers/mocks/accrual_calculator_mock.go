// Code generated by MockGen. DO NOT EDIT.
// Source: gophermart/internal/app/workers (interfaces: AccrualCalculator)

// Package mock_workers is a generated GoMock package.
package mock_workers

import (
	context "context"
	domain "gophermart/internal/app/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccrualCalculator is a mock of AccrualCalculator interface.
type MockAccrualCalculator struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualCalculatorMockRecorder
}

// MockAccrualCalculatorMockRecorder is the mock recorder for MockAccrualCalculator.
type MockAccrualCalculatorMockRecorder struct {
	mock *MockAccrualCalculator
}

// NewMockAccrualCalculator creates a new mock instance.
func NewMockAccrualCalculator(ctrl *gomock.Controller) *MockAccrualCalculator {
	mock := &MockAccrualCalculator{ctrl: ctrl}
	mock.recorder = &MockAccrualCalculatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualCalculator) EXPECT() *MockAccrualCalculatorMockRecorder {
	return m.recorder
}

// CreateOrderForCalculation mocks base method.
func (m *MockAccrualCalculator) CreateOrderForCalculation(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrderForCalculation", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrderForCalculation indicates an expected call of CreateOrderForCalculation.
func (mr *MockAccrualCalculatorMockRecorder) CreateOrderForCalculation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrderForCalculation", reflect.TypeOf((*MockAccrualCalculator)(nil).CreateOrderForCalculation), arg0, arg1)
}

// GetOrderAccrualRes mocks base method.
func (m *MockAccrualCalculator) GetOrderAccrualRes(arg0 context.Context, arg1 string) (*domain.AccrualCalculationRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderAccrualRes", arg0, arg1)
	ret0, _ := ret[0].(*domain.AccrualCalculationRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderAccrualRes indicates an expected call of GetOrderAccrualRes.
func (mr *MockAccrualCalculatorMockRecorder) GetOrderAccrualRes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderAccrualRes", reflect.TypeOf((*MockAccrualCalculator)(nil).GetOrderAccrualRes), arg0, arg1)
}

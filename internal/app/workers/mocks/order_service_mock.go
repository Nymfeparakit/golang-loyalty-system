// Code generated by MockGen. DO NOT EDIT.
// Source: gophermart/internal/app/workers (interfaces: OrderService)

// Package mock_workers is a generated GoMock package.
package mock_workers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrderService is a mock of OrderService interface.
type MockOrderService struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceMockRecorder
}

// MockOrderServiceMockRecorder is the mock recorder for MockOrderService.
type MockOrderServiceMockRecorder struct {
	mock *MockOrderService
}

// NewMockOrderService creates a new mock instance.
func NewMockOrderService(ctrl *gomock.Controller) *MockOrderService {
	mock := &MockOrderService{ctrl: ctrl}
	mock.recorder = &MockOrderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderService) EXPECT() *MockOrderServiceMockRecorder {
	return m.recorder
}

// GetUnprocessedOrdersNumbers mocks base method.
func (m *MockOrderService) GetUnprocessedOrdersNumbers(arg0 context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUnprocessedOrdersNumbers", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUnprocessedOrdersNumbers indicates an expected call of GetUnprocessedOrdersNumbers.
func (mr *MockOrderServiceMockRecorder) GetUnprocessedOrdersNumbers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUnprocessedOrdersNumbers", reflect.TypeOf((*MockOrderService)(nil).GetUnprocessedOrdersNumbers), arg0)
}

// UpdateOrderStatusAndAccrual mocks base method.
func (m *MockOrderService) UpdateOrderStatusAndAccrual(arg0 context.Context, arg1, arg2 string, arg3 float32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrderStatusAndAccrual", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrderStatusAndAccrual indicates an expected call of UpdateOrderStatusAndAccrual.
func (mr *MockOrderServiceMockRecorder) UpdateOrderStatusAndAccrual(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrderStatusAndAccrual", reflect.TypeOf((*MockOrderService)(nil).UpdateOrderStatusAndAccrual), arg0, arg1, arg2, arg3)
}
